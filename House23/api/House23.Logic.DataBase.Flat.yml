### YamlMime:ManagedReference
items:
- uid: House23.Logic.DataBase.Flat
  commentId: T:House23.Logic.DataBase.Flat
  id: Flat
  parent: House23.Logic.DataBase
  children:
  - House23.Logic.DataBase.Flat.#ctor
  - House23.Logic.DataBase.Flat.Area
  - House23.Logic.DataBase.Flat.BuildingNumberOfRoom
  - House23.Logic.DataBase.Flat.EntranceNumber
  - House23.Logic.DataBase.Flat.FloorNumber
  - House23.Logic.DataBase.Flat.IdFlat
  - House23.Logic.DataBase.Flat.IdSkyscraper
  - House23.Logic.DataBase.Flat.ImagePreview
  - House23.Logic.DataBase.Flat.NumberOfRooms
  - House23.Logic.DataBase.Flat.Price
  - House23.Logic.DataBase.Flat.Requests
  - House23.Logic.DataBase.Flat.Skyscraper
  langs:
  - csharp
  - vb
  name: Flat
  nameWithType: Flat
  fullName: House23.Logic.DataBase.Flat
  type: Class
  source:
    id: Flat
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 14
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public class Flat
    content.vb: Public Class Flat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: House23.Logic.DataBase.Flat.#ctor
  commentId: M:House23.Logic.DataBase.Flat.#ctor
  id: '#ctor'
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: Flat()
  nameWithType: Flat.Flat()
  fullName: House23.Logic.DataBase.Flat.Flat()
  type: Constructor
  source:
    id: .ctor
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 16
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public Flat()
    content.vb: Public Sub New
  overload: House23.Logic.DataBase.Flat.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.IdFlat
  commentId: P:House23.Logic.DataBase.Flat.IdFlat
  id: IdFlat
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: IdFlat
  nameWithType: Flat.IdFlat
  fullName: House23.Logic.DataBase.Flat.IdFlat
  type: Property
  source:
    id: IdFlat
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 22
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int IdFlat { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IdFlat As Integer
  overload: House23.Logic.DataBase.Flat.IdFlat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.BuildingNumberOfRoom
  commentId: P:House23.Logic.DataBase.Flat.BuildingNumberOfRoom
  id: BuildingNumberOfRoom
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: BuildingNumberOfRoom
  nameWithType: Flat.BuildingNumberOfRoom
  fullName: House23.Logic.DataBase.Flat.BuildingNumberOfRoom
  type: Property
  source:
    id: BuildingNumberOfRoom
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 23
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int BuildingNumberOfRoom { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BuildingNumberOfRoom As Integer
  overload: House23.Logic.DataBase.Flat.BuildingNumberOfRoom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.Price
  commentId: P:House23.Logic.DataBase.Flat.Price
  id: Price
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Flat.Price
  fullName: House23.Logic.DataBase.Flat.Price
  type: Property
  source:
    id: Price
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 24
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public decimal Price { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Price As Decimal
  overload: House23.Logic.DataBase.Flat.Price*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.NumberOfRooms
  commentId: P:House23.Logic.DataBase.Flat.NumberOfRooms
  id: NumberOfRooms
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: NumberOfRooms
  nameWithType: Flat.NumberOfRooms
  fullName: House23.Logic.DataBase.Flat.NumberOfRooms
  type: Property
  source:
    id: NumberOfRooms
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 25
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int NumberOfRooms { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumberOfRooms As Integer
  overload: House23.Logic.DataBase.Flat.NumberOfRooms*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.Area
  commentId: P:House23.Logic.DataBase.Flat.Area
  id: Area
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Flat.Area
  fullName: House23.Logic.DataBase.Flat.Area
  type: Property
  source:
    id: Area
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 26
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int Area { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Area As Integer
  overload: House23.Logic.DataBase.Flat.Area*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.FloorNumber
  commentId: P:House23.Logic.DataBase.Flat.FloorNumber
  id: FloorNumber
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: FloorNumber
  nameWithType: Flat.FloorNumber
  fullName: House23.Logic.DataBase.Flat.FloorNumber
  type: Property
  source:
    id: FloorNumber
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 27
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int FloorNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FloorNumber As Integer
  overload: House23.Logic.DataBase.Flat.FloorNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.EntranceNumber
  commentId: P:House23.Logic.DataBase.Flat.EntranceNumber
  id: EntranceNumber
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: EntranceNumber
  nameWithType: Flat.EntranceNumber
  fullName: House23.Logic.DataBase.Flat.EntranceNumber
  type: Property
  source:
    id: EntranceNumber
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 28
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int EntranceNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EntranceNumber As Integer
  overload: House23.Logic.DataBase.Flat.EntranceNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.IdSkyscraper
  commentId: P:House23.Logic.DataBase.Flat.IdSkyscraper
  id: IdSkyscraper
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: IdSkyscraper
  nameWithType: Flat.IdSkyscraper
  fullName: House23.Logic.DataBase.Flat.IdSkyscraper
  type: Property
  source:
    id: IdSkyscraper
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 29
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int IdSkyscraper { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IdSkyscraper As Integer
  overload: House23.Logic.DataBase.Flat.IdSkyscraper*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.ImagePreview
  commentId: P:House23.Logic.DataBase.Flat.ImagePreview
  id: ImagePreview
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: ImagePreview
  nameWithType: Flat.ImagePreview
  fullName: House23.Logic.DataBase.Flat.ImagePreview
  type: Property
  source:
    id: ImagePreview
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 30
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public byte[] ImagePreview { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property ImagePreview As Byte()
  overload: House23.Logic.DataBase.Flat.ImagePreview*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Flat.Skyscraper
  commentId: P:House23.Logic.DataBase.Flat.Skyscraper
  id: Skyscraper
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: Skyscraper
  nameWithType: Flat.Skyscraper
  fullName: House23.Logic.DataBase.Flat.Skyscraper
  type: Property
  source:
    id: Skyscraper
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 32
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public virtual Skyscraper Skyscraper { get; set; }
    parameters: []
    return:
      type: House23.Logic.DataBase.Skyscraper
    content.vb: Public Overridable Property Skyscraper As Skyscraper
  overload: House23.Logic.DataBase.Flat.Skyscraper*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: House23.Logic.DataBase.Flat.Requests
  commentId: P:House23.Logic.DataBase.Flat.Requests
  id: Requests
  parent: House23.Logic.DataBase.Flat
  langs:
  - csharp
  - vb
  name: Requests
  nameWithType: Flat.Requests
  fullName: House23.Logic.DataBase.Flat.Requests
  type: Property
  source:
    id: Requests
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Flat.cs
    startLine: 33
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public virtual ICollection<Request> Requests { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{House23.Logic.DataBase.Request}
    content.vb: Public Overridable Property Requests As ICollection(Of Request)
  overload: House23.Logic.DataBase.Flat.Requests*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: House23.Logic.DataBase
  commentId: N:House23.Logic.DataBase
  name: House23.Logic.DataBase
  nameWithType: House23.Logic.DataBase
  fullName: House23.Logic.DataBase
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: House23.Logic.DataBase.Flat.#ctor*
  commentId: Overload:House23.Logic.DataBase.Flat.#ctor
  name: Flat
  nameWithType: Flat.Flat
  fullName: House23.Logic.DataBase.Flat.Flat
- uid: House23.Logic.DataBase.Flat.IdFlat*
  commentId: Overload:House23.Logic.DataBase.Flat.IdFlat
  name: IdFlat
  nameWithType: Flat.IdFlat
  fullName: House23.Logic.DataBase.Flat.IdFlat
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: House23.Logic.DataBase.Flat.BuildingNumberOfRoom*
  commentId: Overload:House23.Logic.DataBase.Flat.BuildingNumberOfRoom
  name: BuildingNumberOfRoom
  nameWithType: Flat.BuildingNumberOfRoom
  fullName: House23.Logic.DataBase.Flat.BuildingNumberOfRoom
- uid: House23.Logic.DataBase.Flat.Price*
  commentId: Overload:House23.Logic.DataBase.Flat.Price
  name: Price
  nameWithType: Flat.Price
  fullName: House23.Logic.DataBase.Flat.Price
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: House23.Logic.DataBase.Flat.NumberOfRooms*
  commentId: Overload:House23.Logic.DataBase.Flat.NumberOfRooms
  name: NumberOfRooms
  nameWithType: Flat.NumberOfRooms
  fullName: House23.Logic.DataBase.Flat.NumberOfRooms
- uid: House23.Logic.DataBase.Flat.Area*
  commentId: Overload:House23.Logic.DataBase.Flat.Area
  name: Area
  nameWithType: Flat.Area
  fullName: House23.Logic.DataBase.Flat.Area
- uid: House23.Logic.DataBase.Flat.FloorNumber*
  commentId: Overload:House23.Logic.DataBase.Flat.FloorNumber
  name: FloorNumber
  nameWithType: Flat.FloorNumber
  fullName: House23.Logic.DataBase.Flat.FloorNumber
- uid: House23.Logic.DataBase.Flat.EntranceNumber*
  commentId: Overload:House23.Logic.DataBase.Flat.EntranceNumber
  name: EntranceNumber
  nameWithType: Flat.EntranceNumber
  fullName: House23.Logic.DataBase.Flat.EntranceNumber
- uid: House23.Logic.DataBase.Flat.IdSkyscraper*
  commentId: Overload:House23.Logic.DataBase.Flat.IdSkyscraper
  name: IdSkyscraper
  nameWithType: Flat.IdSkyscraper
  fullName: House23.Logic.DataBase.Flat.IdSkyscraper
- uid: House23.Logic.DataBase.Flat.ImagePreview*
  commentId: Overload:House23.Logic.DataBase.Flat.ImagePreview
  name: ImagePreview
  nameWithType: Flat.ImagePreview
  fullName: House23.Logic.DataBase.Flat.ImagePreview
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: House23.Logic.DataBase.Flat.Skyscraper*
  commentId: Overload:House23.Logic.DataBase.Flat.Skyscraper
  name: Skyscraper
  nameWithType: Flat.Skyscraper
  fullName: House23.Logic.DataBase.Flat.Skyscraper
- uid: House23.Logic.DataBase.Skyscraper
  commentId: T:House23.Logic.DataBase.Skyscraper
  parent: House23.Logic.DataBase
  name: Skyscraper
  nameWithType: Skyscraper
  fullName: House23.Logic.DataBase.Skyscraper
- uid: House23.Logic.DataBase.Flat.Requests*
  commentId: Overload:House23.Logic.DataBase.Flat.Requests
  name: Requests
  nameWithType: Flat.Requests
  fullName: House23.Logic.DataBase.Flat.Requests
- uid: System.Collections.Generic.ICollection{House23.Logic.DataBase.Request}
  commentId: T:System.Collections.Generic.ICollection{House23.Logic.DataBase.Request}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Request>
  nameWithType: ICollection<Request>
  fullName: System.Collections.Generic.ICollection<House23.Logic.DataBase.Request>
  nameWithType.vb: ICollection(Of Request)
  fullName.vb: System.Collections.Generic.ICollection(Of House23.Logic.DataBase.Request)
  name.vb: ICollection(Of Request)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: House23.Logic.DataBase.Request
    name: Request
    nameWithType: Request
    fullName: House23.Logic.DataBase.Request
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: House23.Logic.DataBase.Request
    name: Request
    nameWithType: Request
    fullName: House23.Logic.DataBase.Request
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
