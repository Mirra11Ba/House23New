### YamlMime:ManagedReference
items:
- uid: House23.Logic.DataBase.Client
  commentId: T:House23.Logic.DataBase.Client
  id: Client
  parent: House23.Logic.DataBase
  children:
  - House23.Logic.DataBase.Client.#ctor
  - House23.Logic.DataBase.Client.Comment
  - House23.Logic.DataBase.Client.Employees
  - House23.Logic.DataBase.Client.FirstName
  - House23.Logic.DataBase.Client.FullName
  - House23.Logic.DataBase.Client.IdClient
  - House23.Logic.DataBase.Client.LastName
  - House23.Logic.DataBase.Client.Patronymic
  - House23.Logic.DataBase.Client.Phone
  - House23.Logic.DataBase.Client.Requests
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Client
  fullName: House23.Logic.DataBase.Client
  type: Class
  source:
    id: Client
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\ClientPartial.cs
    startLine: 8
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public class Client
    content.vb: Public Class Client
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: House23.Logic.DataBase.Client.#ctor
  commentId: M:House23.Logic.DataBase.Client.#ctor
  id: '#ctor'
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: Client()
  nameWithType: Client.Client()
  fullName: House23.Logic.DataBase.Client.Client()
  type: Constructor
  source:
    id: .ctor
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 16
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public Client()
    content.vb: Public Sub New
  overload: House23.Logic.DataBase.Client.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.IdClient
  commentId: P:House23.Logic.DataBase.Client.IdClient
  id: IdClient
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: IdClient
  nameWithType: Client.IdClient
  fullName: House23.Logic.DataBase.Client.IdClient
  type: Property
  source:
    id: IdClient
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 23
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int IdClient { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IdClient As Integer
  overload: House23.Logic.DataBase.Client.IdClient*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.FirstName
  commentId: P:House23.Logic.DataBase.Client.FirstName
  id: FirstName
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: Client.FirstName
  fullName: House23.Logic.DataBase.Client.FirstName
  type: Property
  source:
    id: FirstName
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 24
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: House23.Logic.DataBase.Client.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.LastName
  commentId: P:House23.Logic.DataBase.Client.LastName
  id: LastName
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: Client.LastName
  fullName: House23.Logic.DataBase.Client.LastName
  type: Property
  source:
    id: LastName
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 25
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastName As String
  overload: House23.Logic.DataBase.Client.LastName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.Patronymic
  commentId: P:House23.Logic.DataBase.Client.Patronymic
  id: Patronymic
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: Patronymic
  nameWithType: Client.Patronymic
  fullName: House23.Logic.DataBase.Client.Patronymic
  type: Property
  source:
    id: Patronymic
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 26
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string Patronymic { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Patronymic As String
  overload: House23.Logic.DataBase.Client.Patronymic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.Phone
  commentId: P:House23.Logic.DataBase.Client.Phone
  id: Phone
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Client.Phone
  fullName: House23.Logic.DataBase.Client.Phone
  type: Property
  source:
    id: Phone
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 27
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string Phone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Phone As String
  overload: House23.Logic.DataBase.Client.Phone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.Comment
  commentId: P:House23.Logic.DataBase.Client.Comment
  id: Comment
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: Comment
  nameWithType: Client.Comment
  fullName: House23.Logic.DataBase.Client.Comment
  type: Property
  source:
    id: Comment
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 28
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string Comment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Comment As String
  overload: House23.Logic.DataBase.Client.Comment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Client.Requests
  commentId: P:House23.Logic.DataBase.Client.Requests
  id: Requests
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: Requests
  nameWithType: Client.Requests
  fullName: House23.Logic.DataBase.Client.Requests
  type: Property
  source:
    id: Requests
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 30
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public virtual ICollection<Request> Requests { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{House23.Logic.DataBase.Request}
    content.vb: Public Overridable Property Requests As ICollection(Of Request)
  overload: House23.Logic.DataBase.Client.Requests*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: House23.Logic.DataBase.Client.Employees
  commentId: P:House23.Logic.DataBase.Client.Employees
  id: Employees
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: Employees
  nameWithType: Client.Employees
  fullName: House23.Logic.DataBase.Client.Employees
  type: Property
  source:
    id: Employees
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Client.cs
    startLine: 32
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public virtual ICollection<Employee> Employees { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{House23.Logic.DataBase.Employee}
    content.vb: Public Overridable Property Employees As ICollection(Of Employee)
  overload: House23.Logic.DataBase.Client.Employees*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: House23.Logic.DataBase.Client.FullName
  commentId: P:House23.Logic.DataBase.Client.FullName
  id: FullName
  parent: House23.Logic.DataBase.Client
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: Client.FullName
  fullName: House23.Logic.DataBase.Client.FullName
  type: Property
  source:
    id: FullName
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\ClientPartial.cs
    startLine: 10
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string FullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullName As String
  overload: House23.Logic.DataBase.Client.FullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: House23.Logic.DataBase
  commentId: N:House23.Logic.DataBase
  name: House23.Logic.DataBase
  nameWithType: House23.Logic.DataBase
  fullName: House23.Logic.DataBase
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: House23.Logic.DataBase.Client.#ctor*
  commentId: Overload:House23.Logic.DataBase.Client.#ctor
  name: Client
  nameWithType: Client.Client
  fullName: House23.Logic.DataBase.Client.Client
- uid: House23.Logic.DataBase.Client.IdClient*
  commentId: Overload:House23.Logic.DataBase.Client.IdClient
  name: IdClient
  nameWithType: Client.IdClient
  fullName: House23.Logic.DataBase.Client.IdClient
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: House23.Logic.DataBase.Client.FirstName*
  commentId: Overload:House23.Logic.DataBase.Client.FirstName
  name: FirstName
  nameWithType: Client.FirstName
  fullName: House23.Logic.DataBase.Client.FirstName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: House23.Logic.DataBase.Client.LastName*
  commentId: Overload:House23.Logic.DataBase.Client.LastName
  name: LastName
  nameWithType: Client.LastName
  fullName: House23.Logic.DataBase.Client.LastName
- uid: House23.Logic.DataBase.Client.Patronymic*
  commentId: Overload:House23.Logic.DataBase.Client.Patronymic
  name: Patronymic
  nameWithType: Client.Patronymic
  fullName: House23.Logic.DataBase.Client.Patronymic
- uid: House23.Logic.DataBase.Client.Phone*
  commentId: Overload:House23.Logic.DataBase.Client.Phone
  name: Phone
  nameWithType: Client.Phone
  fullName: House23.Logic.DataBase.Client.Phone
- uid: House23.Logic.DataBase.Client.Comment*
  commentId: Overload:House23.Logic.DataBase.Client.Comment
  name: Comment
  nameWithType: Client.Comment
  fullName: House23.Logic.DataBase.Client.Comment
- uid: House23.Logic.DataBase.Client.Requests*
  commentId: Overload:House23.Logic.DataBase.Client.Requests
  name: Requests
  nameWithType: Client.Requests
  fullName: House23.Logic.DataBase.Client.Requests
- uid: System.Collections.Generic.ICollection{House23.Logic.DataBase.Request}
  commentId: T:System.Collections.Generic.ICollection{House23.Logic.DataBase.Request}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Request>
  nameWithType: ICollection<Request>
  fullName: System.Collections.Generic.ICollection<House23.Logic.DataBase.Request>
  nameWithType.vb: ICollection(Of Request)
  fullName.vb: System.Collections.Generic.ICollection(Of House23.Logic.DataBase.Request)
  name.vb: ICollection(Of Request)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: House23.Logic.DataBase.Request
    name: Request
    nameWithType: Request
    fullName: House23.Logic.DataBase.Request
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: House23.Logic.DataBase.Request
    name: Request
    nameWithType: Request
    fullName: House23.Logic.DataBase.Request
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: House23.Logic.DataBase.Client.Employees*
  commentId: Overload:House23.Logic.DataBase.Client.Employees
  name: Employees
  nameWithType: Client.Employees
  fullName: House23.Logic.DataBase.Client.Employees
- uid: System.Collections.Generic.ICollection{House23.Logic.DataBase.Employee}
  commentId: T:System.Collections.Generic.ICollection{House23.Logic.DataBase.Employee}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Employee>
  nameWithType: ICollection<Employee>
  fullName: System.Collections.Generic.ICollection<House23.Logic.DataBase.Employee>
  nameWithType.vb: ICollection(Of Employee)
  fullName.vb: System.Collections.Generic.ICollection(Of House23.Logic.DataBase.Employee)
  name.vb: ICollection(Of Employee)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: House23.Logic.DataBase.Employee
    name: Employee
    nameWithType: Employee
    fullName: House23.Logic.DataBase.Employee
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: House23.Logic.DataBase.Employee
    name: Employee
    nameWithType: Employee
    fullName: House23.Logic.DataBase.Employee
  - name: )
    nameWithType: )
    fullName: )
- uid: House23.Logic.DataBase.Client.FullName*
  commentId: Overload:House23.Logic.DataBase.Client.FullName
  name: FullName
  nameWithType: Client.FullName
  fullName: House23.Logic.DataBase.Client.FullName
