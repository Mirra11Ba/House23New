### YamlMime:ManagedReference
items:
- uid: House23.Logic.DataBase.Developer
  commentId: T:House23.Logic.DataBase.Developer
  id: Developer
  parent: House23.Logic.DataBase
  children:
  - House23.Logic.DataBase.Developer.#ctor
  - House23.Logic.DataBase.Developer.Description
  - House23.Logic.DataBase.Developer.IdDeveloper
  - House23.Logic.DataBase.Developer.Name
  - House23.Logic.DataBase.Developer.Skyscrapers
  langs:
  - csharp
  - vb
  name: Developer
  nameWithType: Developer
  fullName: House23.Logic.DataBase.Developer
  type: Class
  source:
    id: Developer
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Developer.cs
    startLine: 14
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public class Developer
    content.vb: Public Class Developer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: House23.Logic.DataBase.Developer.#ctor
  commentId: M:House23.Logic.DataBase.Developer.#ctor
  id: '#ctor'
  parent: House23.Logic.DataBase.Developer
  langs:
  - csharp
  - vb
  name: Developer()
  nameWithType: Developer.Developer()
  fullName: House23.Logic.DataBase.Developer.Developer()
  type: Constructor
  source:
    id: .ctor
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Developer.cs
    startLine: 16
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public Developer()
    content.vb: Public Sub New
  overload: House23.Logic.DataBase.Developer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Developer.IdDeveloper
  commentId: P:House23.Logic.DataBase.Developer.IdDeveloper
  id: IdDeveloper
  parent: House23.Logic.DataBase.Developer
  langs:
  - csharp
  - vb
  name: IdDeveloper
  nameWithType: Developer.IdDeveloper
  fullName: House23.Logic.DataBase.Developer.IdDeveloper
  type: Property
  source:
    id: IdDeveloper
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Developer.cs
    startLine: 22
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public int IdDeveloper { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IdDeveloper As Integer
  overload: House23.Logic.DataBase.Developer.IdDeveloper*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Developer.Name
  commentId: P:House23.Logic.DataBase.Developer.Name
  id: Name
  parent: House23.Logic.DataBase.Developer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Developer.Name
  fullName: House23.Logic.DataBase.Developer.Name
  type: Property
  source:
    id: Name
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Developer.cs
    startLine: 23
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: House23.Logic.DataBase.Developer.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Developer.Description
  commentId: P:House23.Logic.DataBase.Developer.Description
  id: Description
  parent: House23.Logic.DataBase.Developer
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Developer.Description
  fullName: House23.Logic.DataBase.Developer.Description
  type: Property
  source:
    id: Description
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Developer.cs
    startLine: 24
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: House23.Logic.DataBase.Developer.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: House23.Logic.DataBase.Developer.Skyscrapers
  commentId: P:House23.Logic.DataBase.Developer.Skyscrapers
  id: Skyscrapers
  parent: House23.Logic.DataBase.Developer
  langs:
  - csharp
  - vb
  name: Skyscrapers
  nameWithType: Developer.Skyscrapers
  fullName: House23.Logic.DataBase.Developer.Skyscrapers
  type: Property
  source:
    id: Skyscrapers
    path: D:\МИРРА\ККЭП учеба\3 курс\$$$Курсач\МЕТ материалы по КП 09.02.07 3 курс 2021_2022 год для студентов\House23\House23\Logic\DataBase\Developer.cs
    startLine: 26
  assemblies:
  - House23
  namespace: House23.Logic.DataBase
  syntax:
    content: public virtual ICollection<Skyscraper> Skyscrapers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{House23.Logic.DataBase.Skyscraper}
    content.vb: Public Overridable Property Skyscrapers As ICollection(Of Skyscraper)
  overload: House23.Logic.DataBase.Developer.Skyscrapers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: House23.Logic.DataBase
  commentId: N:House23.Logic.DataBase
  name: House23.Logic.DataBase
  nameWithType: House23.Logic.DataBase
  fullName: House23.Logic.DataBase
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: House23.Logic.DataBase.Developer.#ctor*
  commentId: Overload:House23.Logic.DataBase.Developer.#ctor
  name: Developer
  nameWithType: Developer.Developer
  fullName: House23.Logic.DataBase.Developer.Developer
- uid: House23.Logic.DataBase.Developer.IdDeveloper*
  commentId: Overload:House23.Logic.DataBase.Developer.IdDeveloper
  name: IdDeveloper
  nameWithType: Developer.IdDeveloper
  fullName: House23.Logic.DataBase.Developer.IdDeveloper
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: House23.Logic.DataBase.Developer.Name*
  commentId: Overload:House23.Logic.DataBase.Developer.Name
  name: Name
  nameWithType: Developer.Name
  fullName: House23.Logic.DataBase.Developer.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: House23.Logic.DataBase.Developer.Description*
  commentId: Overload:House23.Logic.DataBase.Developer.Description
  name: Description
  nameWithType: Developer.Description
  fullName: House23.Logic.DataBase.Developer.Description
- uid: House23.Logic.DataBase.Developer.Skyscrapers*
  commentId: Overload:House23.Logic.DataBase.Developer.Skyscrapers
  name: Skyscrapers
  nameWithType: Developer.Skyscrapers
  fullName: House23.Logic.DataBase.Developer.Skyscrapers
- uid: System.Collections.Generic.ICollection{House23.Logic.DataBase.Skyscraper}
  commentId: T:System.Collections.Generic.ICollection{House23.Logic.DataBase.Skyscraper}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Skyscraper>
  nameWithType: ICollection<Skyscraper>
  fullName: System.Collections.Generic.ICollection<House23.Logic.DataBase.Skyscraper>
  nameWithType.vb: ICollection(Of Skyscraper)
  fullName.vb: System.Collections.Generic.ICollection(Of House23.Logic.DataBase.Skyscraper)
  name.vb: ICollection(Of Skyscraper)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: House23.Logic.DataBase.Skyscraper
    name: Skyscraper
    nameWithType: Skyscraper
    fullName: House23.Logic.DataBase.Skyscraper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: House23.Logic.DataBase.Skyscraper
    name: Skyscraper
    nameWithType: Skyscraper
    fullName: House23.Logic.DataBase.Skyscraper
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
